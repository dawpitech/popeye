version: '3'

services:
  poll:
    build: ./poll
    restart: always
    ports:
      - "5000:80"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - poll-tier
  
  redis:
    image: "redis:7-alpine"
    restart: always
    expose:
      - 6379
    networks:
      - poll-tier
      - back-tier
  
  db:
    image: "postgres:16"
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=votes
    expose:
      - 5432
    networks:
      - result-tier
      - back-tier
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./schema.sql:/docker-entrypoint-initdb.d/initdb.sql"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 5
  
  result:
    build: ./result
    restart: always
    ports:
      - "5001:80"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=votes
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - result-tier
  
  worker:
    restart: always
    build: ./worker
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - back-tier
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=votes
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres

volumes:
  db-data:

networks:
  poll-tier:
  result-tier:
  back-tier: